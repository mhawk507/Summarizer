{"version":3,"sources":["Components/Navbar.jsx","Components/TopicForm.jsx","Components/UrlForm.jsx","Components/Summary.jsx","Components/Forms.jsx","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","aria-current","href","onClick","this","props","Component","TopicForm","formData","setForm","navigation","topic_name","name","onChange","value","next","Option","Select","UrlForm","url_data","useState","urls","setUrls","loading","setloading","data","a","fetch","method","headers","body","JSON","stringify","then","response","json","description","url_server_data","useEffect","Fragment","mode","allowClear","style","width","placeholder","e","Array","isArray","map","x","console","log","i","size","color","Summary","summaries","setSummaries","topics","setTopics","url_server","selected_url","server_data","topic","url","summary_data","defaultData","steps","Forms","useForm","useStep","initialStep","step","App","state","topic_submitted","url_submitted","homeClick","setState","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4c511ab1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-expand-lg \">\r\n        <div className=\"container-fluid\">\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item\">\r\n                <a\r\n                  className=\"nav-link active\"\r\n                  aria-current=\"page\"\r\n                  href=\"/\"\r\n                  onClick={this.props.onClick}\r\n                >\r\n                  Home\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { Input as AntdInput } from \"antd\";\r\n\r\nexport const TopicForm = ({ formData, setForm, navigation }) => {\r\n  const { topic_name } = formData;\r\n  const onSubmit = (data) => {\r\n    fetch(\"http://localhost:5000/get_url\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        const url = json.urls;\r\n        const description = json.description;\r\n        console.log(url);\r\n        console.log(description);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form>\r\n        <label>Enter Topic name</label>\r\n        <AntdInput\r\n          type=\"text\"\r\n          name=\"topic_name\"\r\n          onChange={setForm}\r\n          value={topic_name}\r\n        />\r\n        <input type=\"submit\" value=\"Next\" onClick={() => navigation.next()} />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Select, Spin, Space } from \"antd\";\r\nimport { CircleToBlockLoading } from \"react-loadingg\";\r\nimport \"antd/dist/antd.css\";\r\nconst { Option } = Select;\r\nexport const UrlForm = ({ formData, setForm, navigation }) => {\r\n  var { url_data } = formData;\r\n\r\n  const [urls, setUrls] = useState(null);\r\n  const [loading, setloading] = useState(false);\r\n  const data = async (data) => {\r\n    const datas = await fetch(\"http://localhost:5000/get_url\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        setUrls(json.description);\r\n        formData.url_server_data = [json.urls, json.description];\r\n      });\r\n    setloading(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    data(formData.topic_name);\r\n  }, []);\r\n  function onChangeHandler(e) {\r\n    //url_selected = event.target.value;\r\n    let value = Array.isArray(e) ? e.map((x) => x) : [];\r\n    formData.url_data = value;\r\n    console.log(url_data);\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      {loading ? (\r\n        <form>\r\n          <label>Select Articles to generate summary</label>\r\n          <Select\r\n            mode=\"multiple\"\r\n            allowClear\r\n            style={{ width: \"100%\" }}\r\n            placeholder=\"Please select\"\r\n            name=\"url_data\"\r\n            onChange={onChangeHandler}\r\n          >\r\n            if({urls})\r\n            {urls.map(function (url_data, i) {\r\n              return (\r\n                <Option key={i} value={url_data}>\r\n                  {url_data}\r\n                </Option>\r\n              );\r\n            })}\r\n          </Select>\r\n          <input\r\n            type=\"submit\"\r\n            value=\"Summarize\"\r\n            onClick={() => navigation.next()}\r\n          />\r\n        </form>\r\n      ) : (\r\n        <CircleToBlockLoading size=\"large\" color=\"#00ffff\" /> //<Spin tip=\"Loading...\" />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { CircleToBlockLoading } from \"react-loadingg\";\r\nimport { Carousel as AntdCarousel } from \"antd\";\r\nexport function Summary({ formData }) {\r\n  const { url_data } = formData;\r\n\r\n  const [summaries, setSummaries] = useState(null);\r\n  const [urls, setUrls] = useState(null);\r\n  const [topics, setTopics] = useState(null);\r\n  const [loading, setloading] = useState(false);\r\n  const data = async (url_data, url_server) => {\r\n    const datas = await fetch(\"http://localhost:5000/get_summary\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ selected_url: url_data, server_data: url_server }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        setSummaries(json.data);\r\n        setTopics(json.topic);\r\n        setUrls(json.url);\r\n      });\r\n    setloading(true);\r\n  };\r\n  useEffect(() => {\r\n    data(formData.url_data, formData.url_server_data);\r\n  }, []);\r\n  return (\r\n    <React.Fragment>\r\n      {loading ? (\r\n        <div>\r\n          {summaries.map(function (summary_data, i) {\r\n            return (\r\n              <div key={i} className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <div className=\"card-title\">{topics[i]}</div>\r\n                  <p className=\"card-text\">{summary_data}</p>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      ) : (\r\n        <CircleToBlockLoading size=\"large\" color=\"#00ffff\" />\r\n      )}\r\n      ;\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { TopicForm } from \"./TopicForm\";\r\nimport { UrlForm } from \"./UrlForm\";\r\nimport { useForm, useStep } from \"react-hooks-helper\";\r\nimport { Summary } from \"./Summary\";\r\nconst defaultData = {\r\n  topic_name: \"\",\r\n  url_data: [],\r\n  url_server_data: [],\r\n};\r\n\r\nconst steps = [{ id: \"topic_name\" }, { id: \"urls\" }, { id: \"submit\" }];\r\n\r\nconst Forms = () => {\r\n  const [formData, setForm] = useForm(defaultData);\r\n  const { step, navigation } = useStep({ steps, initialStep: 0 });\r\n  const props = { formData, setForm, navigation };\r\n  switch (step.id) {\r\n    case \"topic_name\":\r\n      return <TopicForm {...props} />;\r\n    case \"urls\":\r\n      return <UrlForm {...props} />;\r\n    case \"submit\":\r\n      return <Summary {...props} />;\r\n    default:\r\n      return <TopicForm {...props} />;\r\n  }\r\n};\r\nexport default Forms;\r\n","import React, { Component} from 'react';\nimport Navbar from './Components/Navbar';\nimport Forms from './Components/Forms';\n\nclass App extends Component {\n  state = { \n    topic_name: \"\",\n    urls: [],\n    description: [],\n    topic_submitted: \"false\",\n    url_submitted: \"false\",\n   }\n  homeClick = () => {\n    this.setState({\n      topic_submitted: [...this.state.topic_submitted,\"false\"]\n    })\n  }\n  render() { \n      return(\n        <React.Fragment>\n        <Navbar  onClick={this.homeClick}/>\n        \n        <Forms />\n        </React.Fragment>\n     \n      )}\n  }\n \nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport './App.css'\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}